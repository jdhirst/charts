apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}-metatube'
  labels:
    katenary.io/component: metatube
    katenary.io/project: '{{ .Chart.Name }}'
    katenary.io/release: '{{ .Release.Name }}'
  annotations:
    katenary.io/docker-compose-sha1: bf97a1953a8799d36d4c3b889b524187f94d6419
    katenary.io/version: 2.0.0-beta2
spec:
  replicas: 1
  selector:
    matchLabels:
      katenary.io/component: metatube
      katenary.io/release: '{{ .Release.Name }}'
  template:
    metadata:
      labels:
        katenary.io/component: metatube
        katenary.io/release: '{{ .Release.Name }}'
    spec:
      initContainers:
        - name: check-postgres
          image: busybox
          command:
            - sh
            - -c
            - |-
              OK=0
              echo "Checking postgres port"
              while [ $OK != 1 ]; do
                  echo -n "."
                  nc -z {{ .Release.Name }}-postgresql 5432 2>&1 >/dev/null && OK=1 || sleep 1
              done
              echo
              echo "Done"
      containers:
        - name: metatube
          image: '{{ .Values.metatube.repository.image }}{{ if ne .Values.metatube.repository.tag "" }}:{{ .Values.metatube.repository.tag }}{{ end }}'
          ports:
            - name: metatube
              containerPort: 8080
          env:
            - name: HTTP_PROXY
              value: '{{ tpl .Values.metatube.environment.HTTP_PROXY . }}'
            - name: HTTPS_PROXY
              value: '{{ tpl .Values.metatube.environment.HTTPS_PROXY . }}'
          command:
            - /metatube-server
            - -dsn
            - postgres://metatube:metatube@/metatube?host=metatube-postgresql
            - -port
            - "8080"
            - -db-auto-migrate
            - -db-prepared-stmt
          volumeMounts:
            - mountPath: /var/run
              name: run
      volumes:
        - name: run
          {{- if  .Values.metatube.persistence.run.enabled }}
          persistentVolumeClaim:
            claimName: '{{ .Release.Name }}-run'
          {{ else }}
          emptyDir: {}
          {{- end }}

